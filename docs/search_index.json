[["index.html", "Skin Laundry Technical Assessment 1 Welcome to the Skin Laundry App", " Skin Laundry Technical Assessment Austin Kolvek 2025-01-11 1 Welcome to the Skin Laundry App The goal of this assessment is to take the data Skin Laundry has provided and build a forecasting model that will predict future demand for their Hyaluronic Acid Serum at clinic G during Q3 of 2024 (July - September 2024). "],["eda.html", "2 EDA", " 2 EDA import pandas as pd data = pd.read_csv(r&#39;C:\\Users\\austi\\OneDrive\\Documents\\Interviews\\Skin Laundry\\Clinic Product Sales Data.csv&#39;) Lets take a look at the first couple of observations! #Set the display up so we can see all of the columns pd.set_option(&#39;display.max_columns&#39;, None) print(data.head()) ## clinic area clinic name sale date guest user id \\ ## 0 Region B Clinic G 1/2/2022 2327eb10-952d-431f-8e97-61d37b81944d ## 1 Region A Clinic E 1/5/2022 ace86dd7-8bfc-4c59-ae96-62aeb14fc843 ## 2 Region B Clinic G 1/8/2022 668a1fb3-b42f-425b-8252-4876779cc7b3 ## 3 Region A Clinic E 1/9/2022 ec01a76e-b6fa-4209-8ffb-0a8b7e7934dd ## 4 Region A Clinic E 1/12/2022 6aa914d4-65e0-4dc1-a211-1c85b3f602a8 ## ## product name product category quantity sold ## 0 TA Tranexamic Acid Serum Serum 1 ## 1 Hyaluronic Acid Serum Serum 1 ## 2 Hyaluronic Acid Serum Serum 1 ## 3 TA Tranexamic Acid Serum Serum 1 ## 4 TA Tranexamic Acid Serum Serum 1 Right away, some of the columns that don’t seem to be needed are “guest user id, product category, and clinic area. Lets check the unique values of product category to make sure we can drop it print(data[&#39;product category&#39;].unique()) ## [&#39;Serum&#39;] “Serum” is the only value for the category, so we are good to drop this column as it provides no info for us Lets drop the columns we stated above data = data.drop(columns=[&#39;clinic area&#39;,&#39;guest user id&#39;,&#39;product category&#39;]) print(data.head()) ## clinic name sale date product name quantity sold ## 0 Clinic G 1/2/2022 TA Tranexamic Acid Serum 1 ## 1 Clinic E 1/5/2022 Hyaluronic Acid Serum 1 ## 2 Clinic G 1/8/2022 Hyaluronic Acid Serum 1 ## 3 Clinic E 1/9/2022 TA Tranexamic Acid Serum 1 ## 4 Clinic E 1/12/2022 TA Tranexamic Acid Serum 1 Next I am going to subset the data down to info that Skin Laundry as specified subset_data = data[(data[&#39;clinic name&#39;] == &#39;Clinic G&#39;) &amp; (data[&#39;product name&#39;] == &#39;Hyaluronic Acid Serum&#39;)] print(subset_data.head()) ## clinic name sale date product name quantity sold ## 2 Clinic G 1/8/2022 Hyaluronic Acid Serum 1 ## 8 Clinic G 1/15/2022 Hyaluronic Acid Serum 1 ## 9 Clinic G 1/17/2022 Hyaluronic Acid Serum 1 ## 16 Clinic G 1/23/2022 Hyaluronic Acid Serum 1 ## 17 Clinic G 1/24/2022 Hyaluronic Acid Serum 1 Next I am going to make sure the our variables are of correct type. Any variables that are not of the correct type, I will correct accordingly. print(subset_data.info()) ## &lt;class &#39;pandas.core.frame.DataFrame&#39;&gt; ## Index: 1415 entries, 2 to 16420 ## Data columns (total 4 columns): ## # Column Non-Null Count Dtype ## --- ------ -------------- ----- ## 0 clinic name 1415 non-null object ## 1 sale date 1415 non-null object ## 2 product name 1415 non-null object ## 3 quantity sold 1415 non-null int64 ## dtypes: int64(1), object(3) ## memory usage: 55.3+ KB ## None I am going to change the “sale date” column to a datetime data type subset_data.loc[:, &#39;sale date&#39;] = pd.to_datetime(subset_data[&#39;sale date&#39;]) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
